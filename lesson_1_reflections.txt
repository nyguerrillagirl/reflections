How did viewing a diff between two versions of a file help you see the bug that was introduced?

   The diff output allowed me to only have to focus and examine on the actual lines that differed from 
   the old file vs the new file

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

   It allows me to see how a file has changed and the reasons why.  
   I can easily determine where features are located when they were introduced and who did the work.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

    The pros is that I can decide when a logical piece of work (effecting one or more files) is saved and committed as a unit. The cons is
    having to remember and manage saving files.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

    The implementation of a particular feature may require changes to one or more files.  It makes sense to commit multiple files as a unit so that
    others can build the application with no errors (due to missing files or files committed or updated out of order). Treating each file separately 
    may make sense in an environment where one build from bottom up.

How can you use the commands git log and git diff to view the history of files?

    The git log command provides detailed information (timestamp + reason) of the commits whereas a git diff can be used to 
    view the detailed differences between commits (and the files involved).

How might using version control make you more confident to make changes that could break something?

    I can easily go back and view the differences and resume from the last "good/stable" version.

Now that you have your workspace set up, what do you want to try using Git for?

    To save my work and progress so I can access it from different machines.
